;; Analyzed by ClojureScript 1.7.170
{:use-macros {defui om.next}, :excludes #{var? key replace force}, :name om.next, :imports {Console goog.debug.Console}, :requires {glog goog.log, gstring goog.string, om.next.cache om.next.cache, clojure.zip clojure.zip, p om.next.protocols, om.next.impl.parser om.next.impl.parser, goog.string goog.string, gobj goog.object, goog.object goog.object, walk clojure.walk, goog.log goog.log, util om.util, om.next.protocols om.next.protocols, om.tempid om.tempid, c om.next.cache, parser om.next.impl.parser, transit om.transit, zip clojure.zip, clojure.walk clojure.walk, om.transit om.transit, tempid om.tempid, om.util om.util, Console goog.debug.Console}, :uses nil, :defs {get-props {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 335, :column 8, :end-line 335, :end-column 17, :private true, :arglists (quote ([x]))}, :private true, :name om.next/get-props, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 17, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 335, :end-line 335, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, tag {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 247, :column 7, :end-line 247, :end-column 10, :arglists (quote ([x class]))}, :name om.next/tag, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 10, :method-params ([x class]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 247, :end-line 247, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x class]))}, db->tree {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 1104, :column 7, :end-line 1104, :end-column 15, :arglists (quote ([query data refs] [query data refs map-ident])), :doc "Given a query, some data in the default database format, and the entire\n   application state in the default database format, return the tree where all\n   ident links have been replaced with their original node values.", :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([query data refs] [query data refs map-ident]), :arglists ([query data refs] [query data refs map-ident]), :arglists-meta (nil nil)}}, :name om.next/db->tree, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 15, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([query data refs] [query data refs map-ident]), :arglists ([query data refs] [query data refs map-ident]), :arglists-meta (nil nil)}, :method-params ([query data refs] [query data refs map-ident]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1104, :end-line 1104, :max-fixed-arity 4, :fn-var true, :arglists ([query data refs] [query data refs map-ident]), :doc "Given a query, some data in the default database format, and the entire\n   application state in the default database format, return the tree where all\n   ident links have been replaced with their original node values."}, get-local-query-data {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 201, :column 8, :end-line 201, :end-column 28, :private true, :arglists (quote ([component]))}, :private true, :name om.next/get-local-query-data, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 28, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 201, :end-line 201, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component]))}, t {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 390, :column 8, :end-line 390, :end-column 9, :private true, :arglists (quote ([c])), :doc "Get basis t value for when the component last read its props from\n   the global state."}, :private true, :name om.next/t, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 9, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 390, :end-line 390, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c])), :doc "Get basis t value for when the component last read its props from\n   the global state."}, get-next-props {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 332, :column 8, :end-line 332, :end-column 22, :private true, :arglists (quote ([x]))}, :private true, :name om.next/get-next-props, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 22, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 332, :end-line 332, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, unwrap {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 263, :column 8, :end-line 263, :end-column 14, :private true, :arglists (quote ([om-props]))}, :private true, :name om.next/unwrap, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 14, :method-params ([om-props]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 263, :end-line 263, :max-fixed-arity 1, :fn-var true, :arglists (quote ([om-props]))}, query {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 177, :column 4, :end-line 177, :end-column 9, :protocol om.next/IQuery, :doc "Return the component's unbound query", :arglists (quote ([this]))}, :protocol om.next/IQuery, :name om.next/query, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 9, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 176, :end-line 177, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Return the component's unbound query"}, query-template {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 69, :column 8, :end-line 69, :end-column 22, :private true, :arglists (quote ([query path]))}, :private true, :name om.next/query-template, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 22, :method-params ([query path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 69, :end-line 69, :max-fixed-arity 2, :fn-var true, :arglists (quote ([query path]))}, move-to-key {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 59, :column 8, :end-line 59, :end-column 19, :private true, :arglists (quote ([loc k]))}, :private true, :name om.next/move-to-key, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 19, :method-params ([loc k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 2, :fn-var true, :arglists (quote ([loc k]))}, get-prop {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 315, :column 8, :end-line 315, :end-column 16, :private true, :arglists (quote ([c k])), :doc "PRIVATE: Do not use"}, :private true, :name om.next/get-prop, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 16, :method-params ([c k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 315, :end-line 315, :max-fixed-arity 2, :fn-var true, :arglists (quote ([c k])), :doc "PRIVATE: Do not use"}, ->OmProps {:protocol-inline nil, :meta {:private true, :protocols #{}, :file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :end-column 27, :column 20, :factory :positional, :line 253, :end-line 253, :arglists (quote ([props basis-t])), :skip-protocol-flag nil}, :private true, :protocols #{}, :name om.next/->OmProps, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 27, :method-params ([props basis-t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 253, :end-line 253, :max-fixed-arity 2, :fn-var true, :arglists (quote ([props basis-t])), :skip-protocol-flag nil}, default-merge {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 1204, :column 7, :end-line 1204, :end-column 20, :arglists (quote ([reconciler state res]))}, :name om.next/default-merge, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 20, :method-params ([reconciler state res]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1204, :end-line 1204, :max-fixed-arity 3, :fn-var true, :arglists (quote ([reconciler state res]))}, class-path->query {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 957, :column 7, :end-line 957, :end-column 24, :arglists (quote ([x y]))}, :name om.next/class-path->query, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 24, :method-params ([x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 957, :end-line 957, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x y]))}, ITxIntercept {:meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 723, :column 14, :end-line 723, :end-column 26, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {tx-intercept [[c tx]]}}}, :protocol-symbol true, :name om.next/ITxIntercept, :file "resources/public/js/om/next.cljs", :end-column 26, :column 1, :line 723, :protocol-info {:methods {tx-intercept [[c tx]]}}, :info nil, :end-line 723, :impls #{}, :doc nil, :jsdoc ("@interface")}, Ident {:meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 161, :column 14, :end-line 161, :end-column 19, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {ident [[this props]]}}}, :protocol-symbol true, :name om.next/Ident, :file "resources/public/js/om/next.cljs", :end-column 19, :column 1, :line 161, :protocol-info {:methods {ident [[this props]]}}, :info nil, :end-line 161, :impls #{}, :doc nil, :jsdoc ("@interface")}, rewrite {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 1144, :column 7, :end-line 1144, :end-column 14, :arglists (quote ([paths]))}, :name om.next/rewrite, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 14, :method-params ([paths]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1144, :end-line 1144, :max-fixed-arity 1, :fn-var true, :arglists (quote ([paths]))}, get-rendered-state {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 535, :column 7, :end-line 535, :end-column 25, :arglists (quote ([component])), :doc "Get the rendered state of component. om.next/get-state always returns the\n   up-to-date state."}, :name om.next/get-rendered-state, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 25, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 535, :end-line 535, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component])), :doc "Get the rendered state of component. om.next/get-state always returns the\n   up-to-date state."}, join-value {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 104, :column 8, :end-line 104, :end-column 18, :private true, :arglists (quote ([join]))}, :private true, :name om.next/join-value, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 18, :method-params ([join]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 104, :end-line 104, :max-fixed-arity 1, :fn-var true, :arglists (quote ([join]))}, react-type {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 416, :column 7, :end-line 416, :end-column 17, :arglists (quote ([x])), :doc "Returns the component type, regardless of whether the component has been\n   mounted"}, :name om.next/react-type, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 17, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 416, :end-line 416, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :doc "Returns the component type, regardless of whether the component has been\n   mounted"}, merge! {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 1211, :column 7, :end-line 1211, :end-column 13, :arglists (quote ([reconciler delta])), :doc "Merge a state delta into the application state. Affected components managed\n   by the reconciler will re-render."}, :name om.next/merge!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 13, :method-params ([reconciler delta]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1211, :end-line 1211, :max-fixed-arity 2, :fn-var true, :arglists (quote ([reconciler delta])), :doc "Merge a state delta into the application state. Affected components managed\n   by the reconciler will re-render."}, -next-props {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 369, :column 7, :end-line 369, :end-column 18, :arglists (quote ([next-props component]))}, :name om.next/-next-props, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 18, :method-params ([next-props component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 369, :end-line 369, :max-fixed-arity 2, :fn-var true, :arglists (quote ([next-props component]))}, gather-sends {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 563, :column 7, :end-line 563, :end-column 19, :arglists (quote ([{:keys [parser], :as env} q remotes]))}, :name om.next/gather-sends, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 19, :method-params ([p__20222 q remotes]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 563, :end-line 563, :max-fixed-arity 3, :fn-var true, :arglists (quote ([{:keys [parser], :as env} q remotes]))}, set-query! {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 571, :column 7, :end-line 571, :end-column 17, :arglists (quote ([component {:keys [params query]}])), :doc "Change the query of a component. Takes a map containing :params and/or\n   :query. :params should be a map of new bindings and :query should be a query\n   expression. Will schedule a re-render as well as remote re-sends if\n   necessary."}, :name om.next/set-query!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 17, :method-params ([component p__20231]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 571, :end-line 571, :max-fixed-arity 2, :fn-var true, :arglists (quote ([component {:keys [params query]}])), :doc "Change the query of a component. Takes a map containing :params and/or\n   :query. :params should be a map of new bindings and :query should be a query\n   expression. Will schedule a re-render as well as remote re-sends if\n   necessary."}, ref->any {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 945, :column 7, :end-line 945, :end-column 15, :arglists (quote ([x ref])), :doc "Get any component from the indexer that matches the ref."}, :name om.next/ref->any, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 15, :method-params ([x ref]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 945, :end-line 945, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x ref])), :doc "Get any component from the indexer that matches the ref."}, get-component-query {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 215, :column 8, :end-line 215, :end-column 27, :private true, :arglists (quote ([c]))}, :private true, :name om.next/get-component-query, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 27, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 215, :end-line 215, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, clear-prev-props! {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 387, :column 8, :end-line 387, :end-column 25, :private true, :arglists (quote ([c]))}, :private true, :name om.next/clear-prev-props!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 25, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 387, :end-line 387, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, props {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 451, :column 7, :end-line 451, :end-column 12, :arglists (quote ([component])), :doc "Return a components props."}, :name om.next/props, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 12, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 451, :end-line 451, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component])), :doc "Return a components props."}, -prev-props {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 361, :column 7, :end-line 361, :end-column 18, :arglists (quote ([prev-props component]))}, :name om.next/-prev-props, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 18, :method-params ([prev-props component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 361, :end-line 361, :max-fixed-arity 2, :fn-var true, :arglists (quote ([prev-props component]))}, get-unbound-query {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 205, :column 7, :end-line 205, :end-column 24, :arglists (quote ([component])), :doc "Return the unbound query for a component."}, :name om.next/get-unbound-query, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 24, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 205, :end-line 205, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component])), :doc "Return the unbound query for a component."}, update-component! {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 619, :column 8, :end-line 619, :end-column 25, :private true, :arglists (quote ([c next-props]))}, :private true, :name om.next/update-component!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 25, :method-params ([c next-props]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 619, :end-line 619, :max-fixed-arity 2, :fn-var true, :arglists (quote ([c next-props]))}, path {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 422, :column 8, :end-line 422, :end-column 12, :private true, :arglists (quote ([c])), :doc "Returns the component's Om data path."}, :private true, :name om.next/path, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 12, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 422, :end-line 422, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c])), :doc "Returns the component's Om data path."}, to-class {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 996, :column 7, :end-line 996, :end-column 15, :arglists (quote ([class]))}, :name om.next/to-class, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 15, :method-params ([class]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 996, :end-line 996, :max-fixed-arity 1, :fn-var true, :arglists (quote ([class]))}, tx-intercept {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 724, :column 4, :end-line 724, :end-column 16, :protocol om.next/ITxIntercept, :doc "An optional protocol that component may implement to intercept child\n     transactions.", :arglists (quote ([c tx]))}, :protocol om.next/ITxIntercept, :name om.next/tx-intercept, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 16, :method-params ([c tx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 723, :end-line 724, :max-fixed-arity 2, :fn-var true, :arglists (quote ([c tx])), :doc "An optional protocol that component may implement to intercept child\n     transactions."}, join-entry {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 99, :column 8, :end-line 99, :end-column 18, :private true, :arglists (quote ([node]))}, :private true, :name om.next/join-entry, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 18, :method-params ([node]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 99, :end-line 99, :max-fixed-arity 1, :fn-var true, :arglists (quote ([node]))}, children {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 614, :column 7, :end-line 614, :end-column 15, :arglists (quote ([component])), :doc "Returns the component's children."}, :name om.next/children, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 15, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 614, :end-line 614, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component])), :doc "Returns the component's children."}, default-merge-ref {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 1380, :column 8, :end-line 1380, :end-column 25, :private true, :arglists (quote ([_ tree ref props]))}, :private true, :name om.next/default-merge-ref, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 25, :method-params ([_ tree ref props]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1380, :end-line 1380, :max-fixed-arity 4, :fn-var true, :arglists (quote ([_ tree ref props]))}, -set-state! {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 180, :column 4, :end-line 180, :end-column 15, :protocol om.next/ILocalState, :doc "Set the component's local state", :arglists (quote ([this new-state]))}, :protocol om.next/ILocalState, :name om.next/-set-state!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 15, :method-params ([this new-state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 179, :end-line 180, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this new-state])), :doc "Set the component's local state"}, iquery? {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 244, :column 7, :end-line 244, :end-column 14, :arglists (quote ([x]))}, :name om.next/iquery?, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 14, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 244, :end-line 244, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, var->keyword {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 189, :column 8, :end-line 189, :end-column 20, :private true, :arglists (quote ([x]))}, :private true, :name om.next/var->keyword, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 20, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 189, :end-line 189, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, update-props! {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 444, :column 8, :end-line 444, :end-column 21, :private true, :arglists (quote ([c next-props]))}, :private true, :name om.next/update-props!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 21, :method-params ([c next-props]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 444, :end-line 444, :max-fixed-arity 2, :fn-var true, :arglists (quote ([c next-props]))}, nil-props {:name om.next/nil-props, :file "resources/public/js/om/next.cljs", :line 261, :column 1, :end-line 261, :end-column 25, :private true, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 261, :column 16, :end-line 261, :end-column 25, :private true}}, should-update? {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 624, :column 7, :end-line 624, :end-column 21, :arglists (quote ([c next-props] [c next-props next-state])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([c next-props] [c next-props next-state]), :arglists ([c next-props] [c next-props next-state]), :arglists-meta (nil nil)}}, :name om.next/should-update?, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 21, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([c next-props] [c next-props next-state]), :arglists ([c next-props] [c next-props next-state]), :arglists-meta (nil nil)}, :method-params ([c next-props] [c next-props next-state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 624, :end-line 624, :max-fixed-arity 3, :fn-var true, :arglists ([c next-props] [c next-props next-state])}, get-ident {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 660, :column 7, :end-line 660, :end-column 16, :arglists (quote ([component])), :doc "Given a component return its ident"}, :name om.next/get-ident, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 16, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 660, :end-line 660, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component])), :doc "Given a component return its ident"}, ast->query {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 825, :column 7, :end-line 825, :end-column 17, :arglists (quote ([query-ast]))}, :name om.next/ast->query, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 17, :method-params ([query-ast]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 825, :end-line 825, :max-fixed-arity 1, :fn-var true, :arglists (quote ([query-ast]))}, om-props {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 255, :column 8, :end-line 255, :end-column 16, :private true, :arglists (quote ([props basis-t]))}, :private true, :name om.next/om-props, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 16, :method-params ([props basis-t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 255, :end-line 255, :max-fixed-arity 2, :fn-var true, :arglists (quote ([props basis-t]))}, instrument {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 440, :column 7, :end-line 440, :end-column 17, :arglists (quote ([component]))}, :name om.next/instrument, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 17, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 440, :end-line 440, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component]))}, om-props-basis {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 258, :column 8, :end-line 258, :end-column 22, :private true, :arglists (quote ([om-props]))}, :private true, :name om.next/om-props-basis, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 22, :method-params ([om-props]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 258, :end-line 258, :max-fixed-arity 1, :fn-var true, :arglists (quote ([om-props]))}, var? {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 185, :column 8, :end-line 185, :end-column 12, :private true, :arglists (quote ([x]))}, :private true, :name om.next/var?, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 12, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 185, :end-line 185, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, map->Reconciler {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 1226, :column 12, :end-line 1226, :end-column 22, :internal-ctor true, :factory :map, :arglists (quote ([G__20518]))}, :name om.next/map->Reconciler, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 22, :method-params ([G__20518]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 1226, :end-line 1226, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__20518]))}, react-key {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 411, :column 7, :end-line 411, :end-column 16, :arglists (quote ([component])), :doc "Returns the components React key."}, :name om.next/react-key, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 16, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 411, :end-line 411, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component])), :doc "Returns the components React key."}, set-state! {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 491, :column 7, :end-line 491, :end-column 17, :arglists (quote ([component new-state])), :doc "Set the component local state of the component. Analogous to React's\n   setState."}, :name om.next/set-state!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 17, :method-params ([component new-state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 491, :end-line 491, :max-fixed-arity 2, :fn-var true, :arglists (quote ([component new-state])), :doc "Set the component local state of the component. Analogous to React's\n   setState."}, default-migrate {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 1390, :column 8, :end-line 1390, :end-column 23, :private true, :arglists (quote ([pure query tempids id-key]))}, :private true, :name om.next/default-migrate, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 23, :method-params ([pure query tempids id-key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1390, :end-line 1390, :max-fixed-arity 4, :fn-var true, :arglists (quote ([pure query tempids id-key]))}, tree->db {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 1073, :column 7, :end-line 1073, :end-column 15, :arglists (quote ([x data] [x data merge-refs])), :doc "Given a Om component class or instance and a tree of data, use the component's\n   query to transform the tree into the default database format. All nodes that\n   can be mapped via Ident implementations wil be replaced with ident links. The\n   original node data will be moved into tables indexed by ident. If merge-ref\n   option is true, will return these tables in the result instead of as metadata.", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([x data] [x data merge-refs]), :arglists ([x data] [x data merge-refs]), :arglists-meta (nil nil)}}, :name om.next/tree->db, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 15, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([x data] [x data merge-refs]), :arglists ([x data] [x data merge-refs]), :arglists-meta (nil nil)}, :method-params ([x data] [x data merge-refs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1073, :end-line 1073, :max-fixed-arity 3, :fn-var true, :arglists ([x data] [x data merge-refs]), :doc "Given a Om component class or instance and a tree of data, use the component's\n   query to transform the tree into the default database format. All nodes that\n   can be mapped via Ident implementations wil be replaced with ident links. The\n   original node data will be moved into tables indexed by ident. If merge-ref\n   option is true, will return these tables in the result instead of as metadata."}, from-history {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 1496, :column 7, :end-line 1496, :end-column 19, :arglists (quote ([reconciler uuid])), :doc "Given a reconciler and UUID return the application state snapshost\n   from history associated with the UUID. The size of the reconciler history\n   may be configured by the :history option when constructing the reconciler."}, :name om.next/from-history, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 19, :method-params ([reconciler uuid]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1496, :end-line 1496, :max-fixed-arity 2, :fn-var true, :arglists (quote ([reconciler uuid])), :doc "Given a reconciler and UUID return the application state snapshost\n   from history associated with the UUID. The size of the reconciler history\n   may be configured by the :history option when constructing the reconciler."}, default-ui->props {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 1362, :column 8, :end-line 1362, :end-column 25, :private true, :arglists (quote ([{:keys [parser pathopt], :as env} c]))}, :private true, :name om.next/default-ui->props, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 25, :method-params ([p__20572 c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1362, :end-line 1362, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [parser pathopt], :as env} c]))}, to-env {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 728, :column 8, :end-line 728, :end-column 14, :private true, :arglists (quote ([x]))}, :private true, :name om.next/to-env, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 14, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 728, :end-line 728, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, process-roots {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 1152, :column 7, :end-line 1152, :end-column 20, :arglists (quote ([query])), :doc "A send helper for rewriting the query to remove client local keys that\n   don't need server side processing. Give a query this function will\n   return a map with two keys, :query and :rewrite. :query is the\n   actual query you should send. Upon receiving the response you should invoke\n   :rewrite on the response before invoking the send callback."}, :name om.next/process-roots, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 20, :method-params ([query]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1152, :end-line 1152, :max-fixed-arity 1, :fn-var true, :arglists (quote ([query])), :doc "A send helper for rewriting the query to remove client local keys that\n   don't need server side processing. Give a query this function will\n   return a map with two keys, :query and :rewrite. :query is the\n   actual query you should send. Upon receiving the response you should invoke\n   :rewrite on the response before invoking the send callback."}, parent {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 399, :column 8, :end-line 399, :end-column 14, :private true, :arglists (quote ([component])), :doc "Returns the parent Om component."}, :private true, :name om.next/parent, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 14, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 399, :end-line 399, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component])), :doc "Returns the parent Om component."}, merge-refs {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 1181, :column 8, :end-line 1181, :end-column 18, :private true, :arglists (quote ([tree config refs]))}, :private true, :name om.next/merge-refs, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 18, :method-params ([tree config refs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1181, :end-line 1181, :max-fixed-arity 3, :fn-var true, :arglists (quote ([tree config refs]))}, prev-props* {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 354, :column 8, :end-line 354, :end-column 19, :private true, :arglists (quote ([x y] [x y z])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([x y] [x y z]), :arglists ([x y] [x y z]), :arglists-meta (nil nil)}}, :private true, :name om.next/prev-props*, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 19, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([x y] [x y z]), :arglists ([x y] [x y z]), :arglists-meta (nil nil)}, :method-params ([x y] [x y z]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 354, :end-line 354, :max-fixed-arity 3, :fn-var true, :arglists ([x y] [x y z])}, replace {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 88, :column 8, :end-line 88, :end-column 15, :private true, :arglists (quote ([template new-query]))}, :private true, :name om.next/replace, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 15, :method-params ([template new-query]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 88, :end-line 88, :max-fixed-arity 2, :fn-var true, :arglists (quote ([template new-query]))}, computed {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 464, :column 7, :end-line 464, :end-column 15, :arglists (quote ([props computed-map])), :doc "Add computed properties to props. Note will replace any pre-existing\n   computed properties."}, :name om.next/computed, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 15, :method-params ([props computed-map]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 464, :end-line 464, :max-fixed-arity 2, :fn-var true, :arglists (quote ([props computed-map])), :doc "Add computed properties to props. Note will replace any pre-existing\n   computed properties."}, force {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 1520, :column 7, :end-line 1520, :end-column 12, :arglists (quote ([expr] [expr target])), :doc "Given a query expression return an equivalent query expression that can be\n   spliced into a transaction that will force a read of that key from the\n   specified remote target.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([expr] [expr target]), :arglists ([expr] [expr target]), :arglists-meta (nil nil)}}, :name om.next/force, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 12, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([expr] [expr target]), :arglists ([expr] [expr target]), :arglists-meta (nil nil)}, :method-params ([expr] [expr target]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1520, :end-line 1520, :max-fixed-arity 2, :fn-var true, :arglists ([expr] [expr target]), :doc "Given a query expression return an equivalent query expression that can be\n   spliced into a transaction that will force a read of that key from the\n   specified remote target."}, ->Indexer {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 832, :column 12, :end-line 832, :end-column 19, :internal-ctor true, :factory :positional, :arglists (quote ([indexes]))}, :name om.next/->Indexer, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 19, :method-params ([indexes]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 832, :end-line 832, :max-fixed-arity 1, :fn-var true, :arglists (quote ([indexes]))}, node->key {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 39, :column 8, :end-line 39, :end-column 17, :private true, :arglists (quote ([node]))}, :private true, :name om.next/node->key, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 17, :method-params ([node]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 1, :fn-var true, :arglists (quote ([node]))}, focused-join {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 111, :column 8, :end-line 111, :end-column 20, :private true, :arglists (quote ([node ks]))}, :private true, :name om.next/focused-join, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 20, :method-params ([node ks]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 111, :end-line 111, :max-fixed-arity 2, :fn-var true, :arglists (quote ([node ks]))}, union? {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 66, :column 16, :end-line 66, :end-column 22, :tag boolean, :arglists (quote ([node]))}, :name om.next/union?, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 22, :method-params ([node]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 66, :ret-tag boolean, :end-line 66, :max-fixed-arity 1, :tag boolean, :fn-var true, :arglists (quote ([node]))}, get-prev-props {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 329, :column 8, :end-line 329, :end-column 22, :private true, :arglists (quote ([x]))}, :private true, :name om.next/get-prev-props, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 22, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 329, :end-line 329, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, normalize* {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 1002, :column 8, :end-line 1002, :end-column 18, :private true, :arglists (quote ([query data refs]))}, :private true, :name om.next/normalize*, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 18, :method-params ([query data refs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1002, :end-line 1002, :max-fixed-arity 3, :fn-var true, :arglists (quote ([query data refs]))}, props* {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 348, :column 8, :end-line 348, :end-column 14, :private true, :arglists (quote ([x y] [x y z])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([x y] [x y z]), :arglists ([x y] [x y z]), :arglists-meta (nil nil)}}, :private true, :name om.next/props*, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 14, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([x y] [x y z]), :arglists ([x y] [x y z]), :arglists-meta (nil nil)}, :method-params ([x y] [x y z]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 348, :end-line 348, :max-fixed-arity 3, :fn-var true, :arglists ([x y] [x y z])}, class->any {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 951, :column 7, :end-line 951, :end-column 17, :arglists (quote ([x class])), :doc "Get any component from the indexer that matches the component class."}, :name om.next/class->any, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 17, :method-params ([x class]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 951, :end-line 951, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x class])), :doc "Get any component from the indexer that matches the component class."}, mounted? {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 604, :column 16, :end-line 604, :end-column 24, :tag boolean, :arglists (quote ([x])), :doc "Returns true if the component is mounted."}, :name om.next/mounted?, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 24, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 604, :ret-tag boolean, :end-line 604, :max-fixed-arity 1, :tag boolean, :fn-var true, :arglists (quote ([x])), :doc "Returns true if the component is mounted."}, focus-query {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 117, :column 7, :end-line 117, :end-column 18, :arglists (quote ([query path])), :doc "Given a query, focus it along the specified path.\n\n  Examples:\n    (om.next/focus-query [:foo :bar :baz] [:foo])\n    => [:foo]\n\n    (om.next/focus-query [{:foo [:bar :baz]} :woz] [:foo :bar])\n    => [{:foo [:bar]}]"}, :name om.next/focus-query, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 18, :method-params ([query path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 117, :end-line 117, :max-fixed-arity 2, :fn-var true, :arglists (quote ([query path])), :doc "Given a query, focus it along the specified path.\n\n  Examples:\n    (om.next/focus-query [:foo :bar :baz] [:foo])\n    => [:foo]\n\n    (om.next/focus-query [{:foo [:bar :baz]} :woz] [:foo :bar])\n    => [{:foo [:bar]}]"}, -merge-pending-state! {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 183, :column 4, :end-line 183, :end-column 25, :protocol om.next/ILocalState, :doc "Get the component's pending local state", :arglists (quote ([this]))}, :protocol om.next/ILocalState, :name om.next/-merge-pending-state!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 25, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 179, :end-line 183, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Get the component's pending local state"}, default-merge-tree {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 1384, :column 8, :end-line 1384, :end-column 26, :private true, :arglists (quote ([a b]))}, :private true, :name om.next/default-merge-tree, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 26, :method-params ([a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1384, :end-line 1384, :max-fixed-arity 2, :fn-var true, :arglists (quote ([a b]))}, *reconciler* {:name om.next/*reconciler*, :file "resources/public/js/om/next.cljs", :line 27, :column 1, :end-line 27, :end-column 49, :dynamic true, :private true, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 27, :column 37, :end-line 27, :end-column 49, :dynamic true, :private true}}, merge-novelty! {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 1192, :column 8, :end-line 1192, :end-column 22, :private true, :arglists (quote ([reconciler state res]))}, :private true, :name om.next/merge-novelty!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 22, :method-params ([reconciler state res]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1192, :end-line 1192, :max-fixed-arity 3, :fn-var true, :arglists (quote ([reconciler state res]))}, IQuery {:meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 176, :column 14, :end-line 176, :end-column 20, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {query [[this]]}}}, :protocol-symbol true, :name om.next/IQuery, :file "resources/public/js/om/next.cljs", :end-column 20, :column 1, :line 176, :protocol-info {:methods {query [[this]]}}, :info nil, :end-line 176, :impls #{}, :doc nil, :jsdoc ("@interface")}, get-computed {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 475, :column 7, :end-line 475, :end-column 19, :arglists (quote ([x] [x k-or-ks])), :doc "Return the computed properties on a component or its props.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([x] [x k-or-ks]), :arglists ([x] [x k-or-ks]), :arglists-meta (nil nil)}}, :name om.next/get-computed, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 19, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([x] [x k-or-ks]), :arglists ([x] [x k-or-ks]), :arglists-meta (nil nil)}, :method-params ([x] [x k-or-ks]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 475, :end-line 475, :max-fixed-arity 2, :fn-var true, :arglists ([x] [x k-or-ks]), :doc "Return the computed properties on a component or its props."}, get-state {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 505, :column 7, :end-line 505, :end-column 16, :arglists (quote ([component] [component k-or-ks])), :doc "Get a component's local state. May provide a single key or a sequential\n   collection of keys for indexed access into the component's local state.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([component] [component k-or-ks]), :arglists ([component] [component k-or-ks]), :arglists-meta (nil nil)}}, :name om.next/get-state, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([component] [component k-or-ks]), :arglists ([component] [component k-or-ks]), :arglists-meta (nil nil)}, :method-params ([component] [component k-or-ks]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 505, :end-line 505, :max-fixed-arity 2, :fn-var true, :arglists ([component] [component k-or-ks]), :doc "Get a component's local state. May provide a single key or a sequential\n   collection of keys for indexed access into the component's local state."}, *parent* {:name om.next/*parent*, :file "resources/public/js/om/next.cljs", :line 28, :column 1, :end-line 28, :end-column 45, :dynamic true, :private true, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 28, :column 37, :end-line 28, :end-column 45, :dynamic true, :private true}}, update-state! {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 519, :column 7, :end-line 519, :end-column 20, :arglists (quote ([component f] [component f arg0] [component f arg0 arg1] [component f arg0 arg1 arg2] [component f arg0 arg1 arg2 arg3] [component f arg0 arg1 arg2 arg3 & arg-rest])), :doc "Update a component's local state. Similar to Clojure(Script)'s update-in.", :top-fn {:variadic true, :max-fixed-arity 6, :method-params ([component f] [component f arg0] [component f arg0 arg1] [component f arg0 arg1 arg2] [component f arg0 arg1 arg2 arg3]), :arglists ([component f] [component f arg0] [component f arg0 arg1] [component f arg0 arg1 arg2] [component f arg0 arg1 arg2 arg3] [component f arg0 arg1 arg2 arg3 & arg-rest]), :arglists-meta (nil nil nil nil nil nil)}}, :name om.next/update-state!, :variadic true, :file "resources/public/js/om/next.cljs", :end-column 20, :top-fn {:variadic true, :max-fixed-arity 6, :method-params ([component f] [component f arg0] [component f arg0 arg1] [component f arg0 arg1 arg2] [component f arg0 arg1 arg2 arg3]), :arglists ([component f] [component f arg0] [component f arg0 arg1] [component f arg0 arg1 arg2] [component f arg0 arg1 arg2 arg3] [component f arg0 arg1 arg2 arg3 & arg-rest]), :arglists-meta (nil nil nil nil nil nil)}, :method-params ([component f] [component f arg0] [component f arg0 arg1] [component f arg0 arg1 arg2] [component f arg0 arg1 arg2 arg3]), :protocol-impl nil, :arglists-meta (nil nil nil nil nil nil), :column 1, :line 519, :end-line 519, :max-fixed-arity 6, :fn-var true, :arglists ([component f] [component f arg0] [component f arg0 arg1] [component f arg0 arg1 arg2] [component f arg0 arg1 arg2 arg3] [component f arg0 arg1 arg2 arg3 & arg-rest]), :doc "Update a component's local state. Similar to Clojure(Script)'s update-in."}, Indexer {:num-fields 1, :protocols #{cljs.core/IRecord om.next.protocols/IIndexer cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IDeref cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name om.next/Indexer, :file "resources/public/js/om/next.cljs", :end-column 19, :type true, :column 12, :internal-ctor true, :line 832, :record true, :end-line 832, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IDeref cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, query-zip {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 47, :column 8, :end-line 47, :end-column 17, :private true, :arglists (quote ([root]))}, :private true, :name om.next/query-zip, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 17, :method-params ([root]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 1, :fn-var true, :arglists (quote ([root]))}, reconciler {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 1406, :column 7, :end-line 1406, :end-column 17, :arglists (quote ([{:keys [state shared shared-fn parser indexer ui->props normalize send merge-sends remotes merge merge-tree merge-ref optimize history root-render root-unmount pathopt migrate id-key], :or {root-render (fn* [p1__20622# p2__20623#] (js/ReactDOM.render p1__20622# p2__20623#)), pathopt false, merge-sends (fn* [p1__20620# p2__20621#] (merge-with into p1__20620# p2__20621#)), remotes [:remote], migrate default-migrate, history 100, merge-ref default-merge-ref, merge default-merge, ui->props default-ui->props, indexer om.next/indexer, root-unmount (fn* [p1__20624#] (js/ReactDOM.unmountComponentAtNode p1__20624#)), merge-tree default-merge-tree, optimize (fn [cs] (sort-by depth cs))}, :as config}])), :doc "Construct a reconciler from a configuration map.\n\n   Required parameters:\n     :state        - the application state. If IAtom value is not supplied the\n                     data will be normalized into the default database format\n                     using the root query. This can be disabled by explicitly\n                     setting the optional :normalize parameter to false.\n     :parser       - the parser to be used\n\n   Optional parameters:\n     :shared       - a map of global shared properties for the component tree.\n     :shared-fn    - a function to compute global shared properties from the root props.\n                     the result is merged with :shared.\n     :send         - required only if the parser will return a non-empty value when\n                     run against the supplied :remotes. send is a function of two\n                     arguments, the map of remote expressions keyed by remote target\n                     and a callback which should be invoked with the result from each\n                     remote target. Note this means the callback can be invoked\n                     multiple times to support parallel fetching and incremental\n                     loading if desired.\n     :normalize    - whether the state should be normalized. If true it is assumed\n                     all novelty introduced into the system will also need\n                     normalization.\n     :remotes      - a vector of keywords representing remote services which can\n                     evaluate query expressions. Defaults to [:remote]\n     :root-render  - the root render function. Defaults to ReactDOM.render\n     :root-unmount - the root unmount function. Defaults to\n                     ReactDOM.unmountComponentAtNode\n     :logger       - supply a goog.log compatible logger"}, :name om.next/reconciler, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 17, :method-params ([p__20625]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1406, :end-line 1406, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [state shared shared-fn parser indexer ui->props normalize send merge-sends remotes merge merge-tree merge-ref optimize history root-render root-unmount pathopt migrate id-key], :or {root-render (fn* [p1__20622# p2__20623#] (js/ReactDOM.render p1__20622# p2__20623#)), pathopt false, merge-sends (fn* [p1__20620# p2__20621#] (merge-with into p1__20620# p2__20621#)), remotes [:remote], migrate default-migrate, history 100, merge-ref default-merge-ref, merge default-merge, ui->props default-ui->props, indexer om.next/indexer, root-unmount (fn* [p1__20624#] (js/ReactDOM.unmountComponentAtNode p1__20624#)), merge-tree default-merge-tree, optimize (fn [cs] (sort-by depth cs))}, :as config}])), :doc "Construct a reconciler from a configuration map.\n\n   Required parameters:\n     :state        - the application state. If IAtom value is not supplied the\n                     data will be normalized into the default database format\n                     using the root query. This can be disabled by explicitly\n                     setting the optional :normalize parameter to false.\n     :parser       - the parser to be used\n\n   Optional parameters:\n     :shared       - a map of global shared properties for the component tree.\n     :shared-fn    - a function to compute global shared properties from the root props.\n                     the result is merged with :shared.\n     :send         - required only if the parser will return a non-empty value when\n                     run against the supplied :remotes. send is a function of two\n                     arguments, the map of remote expressions keyed by remote target\n                     and a callback which should be invoked with the result from each\n                     remote target. Note this means the callback can be invoked\n                     multiple times to support parallel fetching and incremental\n                     loading if desired.\n     :normalize    - whether the state should be normalized. If true it is assumed\n                     all novelty introduced into the system will also need\n                     normalization.\n     :remotes      - a vector of keywords representing remote services which can\n                     evaluate query expressions. Defaults to [:remote]\n     :root-render  - the root render function. Defaults to ReactDOM.render\n     :root-unmount - the root unmount function. Defaults to\n                     ReactDOM.unmountComponentAtNode\n     :logger       - supply a goog.log compatible logger"}, *instrument* {:name om.next/*instrument*, :file "resources/public/js/om/next.cljs", :line 30, :column 1, :end-line 30, :end-column 49, :dynamic true, :private true, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 30, :column 37, :end-line 30, :end-column 49, :dynamic true, :private true}}, params {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 170, :column 4, :end-line 170, :end-column 10, :protocol om.next/IQueryParams, :doc "Return the query parameters", :arglists (quote ([this]))}, :protocol om.next/IQueryParams, :name om.next/params, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 10, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 169, :end-line 170, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Return the query parameters"}, *shared* {:name om.next/*shared*, :file "resources/public/js/om/next.cljs", :line 29, :column 1, :end-line 29, :end-column 45, :dynamic true, :private true, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 29, :column 37, :end-line 29, :end-column 45, :dynamic true, :private true}}, get-indexer {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 933, :column 7, :end-line 933, :end-column 18, :arglists (quote ([reconciler])), :doc "PRIVATE: Get the indexer associated with the reconciler."}, :name om.next/get-indexer, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 18, :method-params ([reconciler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 933, :end-line 933, :max-fixed-arity 1, :fn-var true, :arglists (quote ([reconciler])), :doc "PRIVATE: Get the indexer associated with the reconciler."}, get-props* {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 320, :column 8, :end-line 320, :end-column 18, :private true, :arglists (quote ([x k]))}, :private true, :name om.next/get-props*, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 18, :method-params ([x k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 320, :end-line 320, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x k]))}, focus->path {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 140, :column 8, :end-line 140, :end-column 19, :private true, :arglists (quote ([focus] [focus bound] [focus bound path])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([focus] [focus bound] [focus bound path]), :arglists ([focus] [focus bound] [focus bound path]), :arglists-meta (nil nil nil)}}, :private true, :name om.next/focus->path, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 19, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([focus] [focus bound] [focus bound path]), :arglists ([focus] [focus bound] [focus bound path]), :arglists-meta (nil nil nil)}, :method-params ([focus] [focus bound] [focus bound path]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 140, :end-line 140, :max-fixed-arity 3, :fn-var true, :arglists ([focus] [focus bound] [focus bound path])}, get-params {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 210, :column 7, :end-line 210, :end-column 17, :arglists (quote ([component])), :doc "Return the query params for a component."}, :name om.next/get-params, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 17, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 210, :end-line 210, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component])), :doc "Return the query params for a component."}, bind-query {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 192, :column 8, :end-line 192, :end-column 18, :private true, :arglists (quote ([query params]))}, :private true, :name om.next/bind-query, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 18, :method-params ([query params]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 192, :end-line 192, :max-fixed-arity 2, :fn-var true, :arglists (quote ([query params]))}, compute-react-key {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 266, :column 8, :end-line 266, :end-column 25, :private true, :arglists (quote ([cl props]))}, :private true, :name om.next/compute-react-key, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 25, :method-params ([cl props]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 266, :end-line 266, :max-fixed-arity 2, :fn-var true, :arglists (quote ([cl props]))}, set-prop! {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 338, :column 8, :end-line 338, :end-column 17, :private true, :arglists (quote ([c k v])), :doc "PRIVATE: Do not use"}, :private true, :name om.next/set-prop!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 17, :method-params ([c k v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 338, :end-line 338, :max-fixed-arity 3, :fn-var true, :arglists (quote ([c k v])), :doc "PRIVATE: Do not use"}, *raf* {:name om.next/*raf*, :file "resources/public/js/om/next.cljs", :line 26, :column 1, :end-line 26, :end-column 28, :dynamic true, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 26, :column 23, :end-line 26, :end-column 28, :dynamic true}}, IQueryParams {:meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 169, :column 14, :end-line 169, :end-column 26, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {params [[this]]}}}, :protocol-symbol true, :name om.next/IQueryParams, :file "resources/public/js/om/next.cljs", :end-column 26, :column 1, :line 169, :protocol-info {:methods {params [[this]]}}, :info nil, :end-line 169, :impls #{default}, :doc nil, :jsdoc ("@interface")}, join-key {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 93, :column 8, :end-line 93, :end-column 16, :private true, :arglists (quote ([node]))}, :private true, :name om.next/join-key, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 16, :method-params ([node]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 93, :end-line 93, :max-fixed-arity 1, :fn-var true, :arglists (quote ([node]))}, ident? {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 164, :column 16, :end-line 164, :end-column 22, :tag boolean, :arglists (quote ([x])), :doc "Returns true if x satisfies? Ident"}, :name om.next/ident?, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 22, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 164, :ret-tag boolean, :end-line 164, :max-fixed-arity 1, :tag boolean, :fn-var true, :arglists (quote ([x])), :doc "Returns true if x satisfies? Ident"}, state {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 311, :column 8, :end-line 311, :end-column 13, :private true, :arglists (quote ([c]))}, :private true, :name om.next/state, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 13, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 311, :end-line 311, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, schedule-render! {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 674, :column 7, :end-line 674, :end-column 23, :arglists (quote ([reconciler]))}, :name om.next/schedule-render!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 23, :method-params ([reconciler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 674, :end-line 674, :max-fixed-arity 1, :fn-var true, :arglists (quote ([reconciler]))}, react-set-state! {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 554, :column 7, :end-line 554, :end-column 23, :arglists (quote ([component new-state] [component new-state cb])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([component new-state] [component new-state cb]), :arglists ([component new-state] [component new-state cb]), :arglists-meta (nil nil)}}, :name om.next/react-set-state!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 23, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([component new-state] [component new-state cb]), :arglists ([component new-state] [component new-state cb]), :arglists-meta (nil nil)}, :method-params ([component new-state] [component new-state cb]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 554, :end-line 554, :max-fixed-arity 3, :fn-var true, :arglists ([component new-state] [component new-state cb])}, class-path {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 633, :column 8, :end-line 633, :end-column 18, :private true, :arglists (quote ([c]))}, :private true, :name om.next/class-path, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 18, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 633, :end-line 633, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, transact! {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 775, :column 7, :end-line 775, :end-column 16, :arglists (quote ([x tx] [r ref tx])), :doc "Given a reconciler or component run a transaction. tx is a parse expression\n   that should include mutations followed by any necessary read. The reads will\n   be used to trigger component re-rendering. If given a reconciler can be\n   optionally passed a ref as the second argument.\n\n   Example:\n\n     (om/transact! widget\n       '[(do/this!) (do/that!)\n         :read/this :read/that])", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([x tx] [r ref tx]), :arglists ([x tx] [r ref tx]), :arglists-meta (nil nil)}}, :name om.next/transact!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([x tx] [r ref tx]), :arglists ([x tx] [r ref tx]), :arglists-meta (nil nil)}, :method-params ([x tx] [r ref tx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 775, :end-line 775, :max-fixed-arity 3, :fn-var true, :arglists ([x tx] [r ref tx]), :doc "Given a reconciler or component run a transaction. tx is a parse expression\n   that should include mutations followed by any necessary read. The reads will\n   be used to trigger component re-rendering. If given a reconciler can be\n   optionally passed a ref as the second argument.\n\n   Example:\n\n     (om/transact! widget\n       '[(do/this!) (do/that!)\n         :read/this :read/that])"}, query->ast {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 820, :column 7, :end-line 820, :end-column 17, :arglists (quote ([query-expr])), :doc "Given a query expression convert it into an AST."}, :name om.next/query->ast, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 17, :method-params ([query-expr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 820, :end-line 820, :max-fixed-arity 1, :fn-var true, :arglists (quote ([query-expr])), :doc "Given a query expression convert it into an AST."}, schedule-sends! {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 686, :column 7, :end-line 686, :end-column 22, :arglists (quote ([reconciler]))}, :name om.next/schedule-sends!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 22, :method-params ([reconciler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 686, :end-line 686, :max-fixed-arity 1, :fn-var true, :arglists (quote ([reconciler]))}, basis-t {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 671, :column 8, :end-line 671, :end-column 15, :private true, :arglists (quote ([reconciler]))}, :private true, :name om.next/basis-t, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 15, :method-params ([reconciler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 671, :end-line 671, :max-fixed-arity 1, :fn-var true, :arglists (quote ([reconciler]))}, roots {:name om.next/roots, :file "resources/public/js/om/next.cljs", :line 25, :column 1, :end-line 25, :end-column 21, :private true, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 25, :column 16, :end-line 25, :end-column 21, :private true}}, *depth* {:name om.next/*depth*, :file "resources/public/js/om/next.cljs", :line 31, :column 1, :end-line 31, :end-column 44, :dynamic true, :private true, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 31, :column 37, :end-line 31, :end-column 44, :dynamic true, :private true}}, add-root! {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 692, :column 7, :end-line 692, :end-column 16, :arglists (quote ([reconciler root-class target] [reconciler root-class target options])), :doc "Given a root component class and a target root DOM node, instantiate and\n   render the root class using the reconciler's :state property. The reconciler\n   will continue to observe changes to :state and keep the target node in sync.\n   Note a reconciler may have only one root. If invoked on a reconciler with an\n   existing root, the new root will replace the old one.", :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([reconciler root-class target] [reconciler root-class target options]), :arglists ([reconciler root-class target] [reconciler root-class target options]), :arglists-meta (nil nil)}}, :name om.next/add-root!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([reconciler root-class target] [reconciler root-class target options]), :arglists ([reconciler root-class target] [reconciler root-class target options]), :arglists-meta (nil nil)}, :method-params ([reconciler root-class target] [reconciler root-class target options]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 692, :end-line 692, :max-fixed-arity 4, :fn-var true, :arglists ([reconciler root-class target] [reconciler root-class target options]), :doc "Given a root component class and a target root DOM node, instantiate and\n   render the root class using the reconciler's :state property. The reconciler\n   will continue to observe changes to :state and keep the target node in sync.\n   Note a reconciler may have only one root. If invoked on a reconciler with an\n   existing root, the new root will replace the old one."}, reconciler? {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 1485, :column 16, :end-line 1485, :end-column 27, :tag boolean, :arglists (quote ([x])), :doc "Returns true if x is a reconciler."}, :name om.next/reconciler?, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 27, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1485, :ret-tag boolean, :end-line 1485, :max-fixed-arity 1, :tag boolean, :fn-var true, :arglists (quote ([x])), :doc "Returns true if x is a reconciler."}, get-query {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 224, :column 7, :end-line 224, :end-column 16, :arglists (quote ([x])), :doc "Return a IQuery/IParams instance bound query. Works for component classes\n   and component instances. See also om.next/full-query."}, :name om.next/get-query, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 16, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 224, :end-line 224, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :doc "Return a IQuery/IParams instance bound query. Works for component classes\n   and component instances. See also om.next/full-query."}, ref->components {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 939, :column 7, :end-line 939, :end-column 22, :arglists (quote ([x ref])), :doc "Return all components for a given ref."}, :name om.next/ref->components, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 22, :method-params ([x ref]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 939, :end-line 939, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x ref])), :doc "Return all components for a given ref."}, mock-root {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 713, :column 7, :end-line 713, :end-column 16, :arglists (quote ([reconciler root-class])), :doc "Create an Om Next root without an actual DOM target. Useful in devcards\n   testing context."}, :name om.next/mock-root, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 16, :method-params ([reconciler root-class]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 713, :end-line 713, :max-fixed-arity 2, :fn-var true, :arglists (quote ([reconciler root-class])), :doc "Create an Om Next root without an actual DOM target. Useful in devcards\n   testing context."}, ->Reconciler {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 1226, :column 12, :end-line 1226, :end-column 22, :internal-ctor true, :factory :positional, :arglists (quote ([config state]))}, :name om.next/->Reconciler, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 22, :method-params ([config state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 1226, :end-line 1226, :max-fixed-arity 2, :fn-var true, :arglists (quote ([config state]))}, Reconciler {:num-fields 2, :protocols #{cljs.core/IRecord om.next.protocols/IReconciler cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IDeref cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name om.next/Reconciler, :file "resources/public/js/om/next.cljs", :end-column 22, :type true, :column 12, :internal-ctor true, :line 1226, :record true, :end-line 1226, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IDeref cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, OmProps {:private true, :num-fields 2, :protocols #{}, :name om.next/OmProps, :file "resources/public/js/om/next.cljs", :end-column 27, :type true, :column 20, :line 253, :record false, :end-line 253, :skip-protocol-flag nil}, transact* {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 732, :column 7, :end-line 732, :end-column 16, :arglists (quote ([r c ref tx]))}, :name om.next/transact*, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 16, :method-params ([r c ref tx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 732, :end-line 732, :max-fixed-arity 4, :fn-var true, :arglists (quote ([r c ref tx]))}, dispatch {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 815, :column 7, :end-line 815, :end-column 15, :arglists (quote ([_ key _])), :doc "Helper function for implementing :read and :mutate as multimethods. Use this\n   as the dispatch-fn."}, :name om.next/dispatch, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 15, :method-params ([_ key _]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 815, :end-line 815, :max-fixed-arity 3, :fn-var true, :arglists (quote ([_ key _])), :doc "Helper function for implementing :read and :mutate as multimethods. Use this\n   as the dispatch-fn."}, app-state {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 1490, :column 7, :end-line 1490, :end-column 16, :arglists (quote ([reconciler])), :doc "Return the reconciler's application state atom. Useful when the reconciler\n   was initialized via denormalized data."}, :name om.next/app-state, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 16, :method-params ([reconciler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1490, :end-line 1490, :max-fixed-arity 1, :fn-var true, :arglists (quote ([reconciler])), :doc "Return the reconciler's application state atom. Useful when the reconciler\n   was initialized via denormalized data."}, -get-state {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 181, :column 4, :end-line 181, :end-column 14, :protocol om.next/ILocalState, :doc "Get the component's local state", :arglists (quote ([this]))}, :protocol om.next/ILocalState, :name om.next/-get-state, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 179, :end-line 181, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Get the component's local state"}, join? {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 107, :column 8, :end-line 107, :end-column 13, :private true, :arglists (quote ([x]))}, :private true, :name om.next/join?, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 13, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 107, :end-line 107, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, factory {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 273, :column 7, :end-line 273, :end-column 14, :arglists (quote ([class] [class {:keys [validator keyfn], :as opts}])), :doc "Create a factory constructor from a component class created with\n   om.next/defui.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([class] [class {:keys [validator keyfn], :as opts}]), :arglists ([class] [class {:keys [validator keyfn], :as opts}]), :arglists-meta (nil nil)}}, :name om.next/factory, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 14, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([class] [class {:keys [validator keyfn], :as opts}]), :arglists ([class] [class {:keys [validator keyfn], :as opts}]), :arglists-meta (nil nil)}, :method-params ([class] [class {:keys [validator keyfn], :as opts}]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 273, :end-line 273, :max-fixed-arity 2, :fn-var true, :arglists ([class] [class {:keys [validator keyfn], :as opts}]), :doc "Create a factory constructor from a component class created with\n   om.next/defui."}, -get-rendered-state {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 182, :column 4, :end-line 182, :end-column 23, :protocol om.next/ILocalState, :doc "Get the component's rendered local state", :arglists (quote ([this]))}, :protocol om.next/ILocalState, :name om.next/-get-rendered-state, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 23, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 179, :end-line 182, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Get the component's rendered local state"}, parser {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 808, :column 7, :end-line 808, :end-column 13, :arglists (quote ([{:keys [read mutate], :as opts}])), :doc "Create a parser. The argument is a map of two keys, :read and :mutate. Both\n   functions should have the signature (Env -> Key -> Params -> ParseResult)."}, :name om.next/parser, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 13, :method-params ([p__20284]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 808, :end-line 808, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [read mutate], :as opts}])), :doc "Create a parser. The argument is a map of two keys, :read and :mutate. Both\n   functions should have the signature (Env -> Key -> Params -> ParseResult)."}, merge-pending-state! {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 544, :column 8, :end-line 544, :end-column 28, :private true, :arglists (quote ([c]))}, :private true, :name om.next/merge-pending-state!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 28, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 544, :end-line 544, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, merge-pending-props! {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 376, :column 8, :end-line 376, :end-column 28, :private true, :arglists (quote ([c]))}, :private true, :name om.next/merge-pending-props!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 28, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 376, :end-line 376, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, nil-or-map? {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 36, :column 16, :end-line 36, :end-column 27, :tag boolean, :arglists (quote ([x]))}, :name om.next/nil-or-map?, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 27, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :ret-tag boolean, :end-line 36, :max-fixed-arity 1, :tag boolean, :fn-var true, :arglists (quote ([x]))}, writer {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 1514, :column 7, :end-line 1514, :end-column 13, :arglists (quote ([] [opts])), :doc "Create a Om Next transit writer. This writer can handler the tempid type.\n   Can pass transit writer customization opts map.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [opts]), :arglists ([] [opts]), :arglists-meta (nil nil)}}, :name om.next/writer, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [opts]), :arglists ([] [opts]), :arglists-meta (nil nil)}, :method-params ([] [opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1514, :end-line 1514, :max-fixed-arity 1, :fn-var true, :arglists ([] [opts]), :doc "Create a Om Next transit writer. This writer can handler the tempid type.\n   Can pass transit writer customization opts map."}, *logger* {:name om.next/*logger*, :file "resources/public/js/om/next.cljs", :line 17, :column 1, :end-line 17, :end-column 18, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 17, :column 10, :end-line 17, :end-column 18}}, sift-refs {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 1091, :column 8, :end-line 1091, :end-column 17, :private true, :arglists (quote ([res]))}, :private true, :name om.next/sift-refs, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 17, :method-params ([res]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1091, :end-line 1091, :max-fixed-arity 1, :fn-var true, :arglists (quote ([res]))}, indexer {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 925, :column 7, :end-line 925, :end-column 14, :arglists (quote ([])), :doc "Given a function (Component -> Ref), return an indexer."}, :name om.next/indexer, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 14, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 925, :end-line 925, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Given a function (Component -> Ref), return an indexer."}, subquery {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 648, :column 7, :end-line 648, :end-column 15, :arglists (quote ([x subquery-ref subquery-class])), :doc "Given a class or mounted component x and a ref to an instantiated component\n   or class that defines a subquery, pick the most specific subquery. If the\n   component is mounted subquery-ref will be used, subquery-class otherwise."}, :name om.next/subquery, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 15, :method-params ([x subquery-ref subquery-class]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 648, :end-line 648, :max-fixed-arity 3, :fn-var true, :arglists (quote ([x subquery-ref subquery-class])), :doc "Given a class or mounted component x and a ref to an instantiated component\n   or class that defines a subquery, pick the most specific subquery. If the\n   component is mounted subquery-ref will be used, subquery-class otherwise."}, reader {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 1508, :column 7, :end-line 1508, :end-column 13, :arglists (quote ([] [opts])), :doc "Create a Om Next transit reader. This reader can handler the tempid type.\n   Can pass transit reader customization opts map.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [opts]), :arglists ([] [opts]), :arglists-meta (nil nil)}}, :name om.next/reader, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [opts]), :arglists ([] [opts]), :arglists-meta (nil nil)}, :method-params ([] [opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1508, :end-line 1508, :max-fixed-arity 1, :fn-var true, :arglists ([] [opts]), :doc "Create a Om Next transit reader. This reader can handler the tempid type.\n   Can pass transit reader customization opts map."}, component? {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 304, :column 16, :end-line 304, :end-column 26, :tag boolean, :arglists (quote ([x])), :doc "Returns true if the argument is an Om component."}, :name om.next/component?, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 26, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 304, :ret-tag boolean, :end-line 304, :max-fixed-arity 1, :tag boolean, :fn-var true, :arglists (quote ([x])), :doc "Returns true if the argument is an Om component."}, remove-root! {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 707, :column 7, :end-line 707, :end-column 19, :arglists (quote ([reconciler target])), :doc "Remove a root target (a DOM element) from a reconciler. The reconciler will\n   no longer attempt to reconcile application state with the specified root."}, :name om.next/remove-root!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 19, :method-params ([reconciler target]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 707, :end-line 707, :max-fixed-arity 2, :fn-var true, :arglists (quote ([reconciler target])), :doc "Remove a root target (a DOM element) from a reconciler. The reconciler will\n   no longer attempt to reconcile application state with the specified root."}, ident {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 162, :column 4, :end-line 162, :end-column 9, :protocol om.next/Ident, :doc "Return the ref for this component", :arglists (quote ([this props]))}, :protocol om.next/Ident, :name om.next/ident, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 9, :method-params ([this props]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 161, :end-line 162, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this props])), :doc "Return the ref for this component"}, react-ref {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 609, :column 7, :end-line 609, :end-column 16, :arglists (quote ([component name])), :doc "Returns the component associated with a component's React ref."}, :name om.next/react-ref, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 16, :method-params ([component name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 609, :end-line 609, :max-fixed-arity 2, :fn-var true, :arglists (quote ([component name])), :doc "Returns the component associated with a component's React ref."}, tempid {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 1503, :column 7, :end-line 1503, :end-column 13, :arglists (quote ([] [id])), :doc "Return a temporary id.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [id]), :arglists ([] [id]), :arglists-meta (nil nil)}}, :name om.next/tempid, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [id]), :arglists ([] [id]), :arglists-meta (nil nil)}, :method-params ([] [id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1503, :end-line 1503, :max-fixed-arity 1, :fn-var true, :arglists ([] [id]), :doc "Return a temporary id."}, get-reconciler {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 343, :column 8, :end-line 343, :end-column 22, :private true, :arglists (quote ([c]))}, :private true, :name om.next/get-reconciler, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 22, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 343, :end-line 343, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, map->Indexer {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 832, :column 12, :end-line 832, :end-column 19, :internal-ctor true, :factory :map, :arglists (quote ([G__20294]))}, :name om.next/map->Indexer, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 19, :method-params ([G__20294]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 832, :end-line 832, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__20294]))}, transform-reads {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 760, :column 7, :end-line 760, :end-column 22, :arglists (quote ([r tx]))}, :name om.next/transform-reads, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 22, :method-params ([r tx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 760, :end-line 760, :max-fixed-arity 2, :fn-var true, :arglists (quote ([r tx]))}, shared {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 427, :column 7, :end-line 427, :end-column 13, :arglists (quote ([component] [component k-or-ks])), :doc "Return the global shared properties of the Om Next root. See :shared and\n   :shared-fn reconciler options.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([component] [component k-or-ks]), :arglists ([component] [component k-or-ks]), :arglists-meta (nil nil)}}, :name om.next/shared, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([component] [component k-or-ks]), :arglists ([component] [component k-or-ks]), :arglists-meta (nil nil)}, :method-params ([component] [component k-or-ks]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 427, :end-line 427, :max-fixed-arity 2, :fn-var true, :arglists ([component] [component k-or-ks]), :doc "Return the global shared properties of the Om Next root. See :shared and\n   :shared-fn reconciler options."}, depth {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 404, :column 8, :end-line 404, :end-column 13, :private true, :arglists (quote ([component])), :doc "PRIVATE: Returns the render depth (a integer) of the component relative to\n  the mount root."}, :private true, :name om.next/depth, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 13, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 404, :end-line 404, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component])), :doc "PRIVATE: Returns the render depth (a integer) of the component relative to\n  the mount root."}, ref? {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 1097, :column 16, :end-line 1097, :end-column 20, :tag boolean, :arglists (quote ([x]))}, :name om.next/ref?, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 20, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1097, :ret-tag boolean, :end-line 1097, :max-fixed-arity 1, :tag boolean, :fn-var true, :arglists (quote ([x]))}, ILocalState {:meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 179, :column 14, :end-line 179, :end-column 25, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {-set-state! [[this new-state]], -get-state [[this]], -get-rendered-state [[this]], -merge-pending-state! [[this]]}}}, :protocol-symbol true, :name om.next/ILocalState, :file "resources/public/js/om/next.cljs", :end-column 25, :column 1, :line 179, :protocol-info {:methods {-set-state! [[this new-state]], -get-state [[this]], -get-rendered-state [[this]], -merge-pending-state! [[this]]}}, :info nil, :end-line 179, :impls #{}, :doc nil, :jsdoc ("@interface")}, full-query {:protocol-inline nil, :meta {:file "/Users/nhusher/Projects/freeway/resources/public/js/om/next.cljs", :line 964, :column 7, :end-line 964, :end-column 17, :arglists (quote ([component] [component query])), :doc "Returns the absolute query for a given component, not relative like\n   om.next/get-query.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([component] [component query]), :arglists ([component] [component query]), :arglists-meta (nil nil)}}, :name om.next/full-query, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 17, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([component] [component query]), :arglists ([component] [component query]), :arglists-meta (nil nil)}, :method-params ([component] [component query]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 964, :end-line 964, :max-fixed-arity 2, :fn-var true, :arglists ([component] [component query]), :doc "Returns the absolute query for a given component, not relative like\n   om.next/get-query."}}, :require-macros {om.next om.next}, :cljs.analyzer/constants {:seen #{:om.next/union indexes :query-root x :remote :tempids :normalized query satisfies? fn? :remove :pathopt vector? :id-key :react-key subquery-ref :read :key :om.next/queries :else props :merge-sends :ref :config :queue :validator :sends-queued :remotes subquery-class :migrate * map? :reconciler c' :params :history :paths string? :type :keyfn :merge-ref :state :queued-sends :prop->classes keyword? validator :component config :ref->components :om.next/tables :merge :om.next/no-queries :queued refs :class->components IQuery or :shared-fn reconciler params :render :parser :keys :ui->props nil? :next not :root state component :logger :indexer :root-unmount basis-t reconciler? :om-path :send :om.next/not-found :shared :merge-tree :optimize c :t tx :om.next/computed :indexes :target quote :root-render :query class ... :rewrite opts :class-path->query :normalize component? root-class :mutate :om.next/skip :om/tag}, :order [:else :om.next/union * ... :config :state :om.next/queries :query :params :component nil? c' c props basis-t :react-key :om-path :validator :keyfn fn? class validator :ref component? component :om.next/computed :parser or not params query :history :logger :remotes keyword? subquery-ref string? subquery-class reconciler? reconciler root-class :shared :pathopt :reconciler vector? tx satisfies? IQuery x :read :mutate map? opts :key :prop->classes :class-path->query :class->components :ref->components :om.next/not-found :indexes indexes :indexer :type :om.next/no-queries :om/tag :om.next/tables refs :query-root :paths :rewrite :merge-ref :normalize :merge-tree :root :keys :next :tempids :merge :migrate :id-key :queue :queued-sends :merge-sends :sends-queued :send :render :om.next/skip :ui->props :optimize :queued :t :normalized :shared-fn :root-render :target :remove :root-unmount config state :remote quote]}, :doc nil}